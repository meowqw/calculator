# Generated by Django 4.2 on 2023-04-20 07:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fio', models.CharField(blank=True, max_length=200, null=True, verbose_name='ФИО')),
                ('email', models.CharField(blank=True, max_length=200, null=True, verbose_name='Почта')),
                ('phone', models.CharField(blank=True, max_length=200, null=True, verbose_name='Телефон')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Diameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, verbose_name='Наименование')),
                ('total', models.FloatField(blank=True, default=0, verbose_name='Тотал (не изменяемое поле)')),
                ('material', models.JSONField(blank=True, null=True, verbose_name='Материалы')),
            ],
            options={
                'verbose_name': 'Диаметр коронки',
                'verbose_name_plural': 'Диаметры коронок',
            },
        ),
        migrations.CreateModel(
            name='DiameterSecondCalc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(blank=True, verbose_name='Размер')),
                ('material', models.JSONField(blank=True, null=True, verbose_name='Материалы')),
            ],
            options={
                'verbose_name': 'Диаметр коронки',
                'verbose_name_plural': 'Диаметр коронки 2 калькулятора',
            },
        ),
        migrations.CreateModel(
            name='ExtraWorks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, verbose_name='Наименование')),
                ('price', models.FloatField(blank=True, default=0, verbose_name='Цена')),
            ],
            options={
                'verbose_name': 'Доп работа',
                'verbose_name_plural': 'Доп работы',
            },
        ),
        migrations.CreateModel(
            name='Logistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(blank=True, default=0, verbose_name='Цена за км')),
            ],
            options={
                'verbose_name': 'Логистика',
                'verbose_name_plural': 'Логистика',
            },
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Материалы',
                'verbose_name_plural': 'Материал',
            },
        ),
        migrations.CreateModel(
            name='StartTotal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(blank=True, default=0, verbose_name='Начальная цена')),
            ],
            options={
                'verbose_name': 'Начальные цены',
                'verbose_name_plural': 'Начальные цены',
            },
        ),
        migrations.CreateModel(
            name='StartTotalWithoutCoef',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.starttotal', verbose_name='Начальная цена')),
            ],
            options={
                'verbose_name': 'Начальная цена (без коэф)',
                'verbose_name_plural': 'Начальная цена (без коэф)',
            },
        ),
        migrations.CreateModel(
            name='Coefficients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=200, verbose_name='Наименование')),
                ('price', models.FloatField(blank=True, default=0, verbose_name='Коэффициент')),
                ('start_total', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.starttotal', verbose_name='Начальная цена')),
            ],
            options={
                'verbose_name': 'Коэффициент',
                'verbose_name_plural': 'Коэффициенты',
            },
        ),
        migrations.CreateModel(
            name='ClientNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True, max_length=500, null=True, verbose_name='Заметка')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.client')),
            ],
            options={
                'verbose_name': 'Состав заказа',
                'verbose_name_plural': 'Состав заказа',
            },
        ),
    ]
